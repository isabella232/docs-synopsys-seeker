---
title: Using the Synopsys Seeker IAST Service Broker for Pivotal Platform
owner: Partners
---

<strong><%= modified_date %></strong>

This topic describes how to use the Synopsys Seeker IAST Service Broker for Pivotal Platform.

##<a id='using'></a> How the Synopsys Seeker IAST Service Broker for Pivotal Platform Works


The Synopsys Seeker IAST Service Broker tile relies on following buildpacks:

1. https://github.com/synopsys-sig/seeker-nodejs-buildpack - used to monitor node apps, forked from: https://github.com/cloudfoundry/nodejs-buildpack
1. https://github.com/synopsys-sig/seeker-java-buildpack - used to monitor java apps, forked from: https://github.com/cloudfoundry/java-buildpack

Each buildpack is in charge of pulling the agent from the server and injecting 
it into the app during the deployment.

The buildpack then sets the following environment variable:

* SEEKER_SERVER_URL

This variable is used by the agent to communicate with the server.  

**Java**:  
In Java apps, the buildpack adds the javaagent jvm argument that points to the `seeker-agent.jar`.

**NodeJS**:  
In NodeJS apps, the agent must be included from the source code. The first line of code should be:
<p><code>
require('@synopsys-sig/seeker-inline');
</code></p>

If adding this line to the code is problematic, use a special environment variable 
that injects this line of code automatically:
<p><code>
cf set-env cf-nodejs SEEKER\_APP\_ENTRY\_POINT ./server.js
</code></p>

The **SEEKER\_APP\_ENTRY\_POINT** should point to the main module. It should be the full path to 
the JS file relative to the root folder of your app.

##<a id='using'></a> Using the Synopsys Seeker IAST Service Broker for Pivotal Platform

The Synopsys Seeker IAST Service Broker for Pivotal Platform requires that you are logged in to a Pivotal Platform environment
and have selected your organization and space.

1. Verify that the **synopsys-seeker** service displays in the Marketplace using the command: 
<p><code>
cf marketplace 
</code></p>
1. Create a service instance of the synopsys-seeker using the command:
 <p><code>
cf create-service synopsys-seeker standard INSTANCE-NAME
 </code></p>
1. Deploy your app using the custom Seeker buildpack without starting it:  
**For NodeJS apps**:
<p><code>
cf push --no-start -b https://github.com/synopsys-sig/seeker-nodejs-buildpack APP-NAME 
</code></p>
**For Java apps**:
<p><code>
cf push --no-start -b https://github.com/synopsys-sig/seeker-java-buildpack APP-NAME 
</code></p>
1. Bind the service instance of the Seeker service to the app using the command: 
 <p><code>
cf bind-service APP-NAME INSTANCE-NAME
 </code></p>
1. Start the app
<p><code>
cf start APP-NAME
</code></p>
1. Navigate to Seeker Enterprise to view the findings:
<img src='images/seeker-vuln-list.png'></img>
